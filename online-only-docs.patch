diff --git a/README.md b/README.md
index 0000000..0000001 100644
--- a/README.md
+++ b/README.md
@@ -1,40 +1,120 @@
-# Screen2Deck
+# Screen2Deck ‚Äî v2.3.0 (ONLINE-only)
 
-Scanner de decklists MTGA/MTGO √† partir de screenshots.
+Scanner de decklists MTGA/MTGO √† partir de **screenshots**, 100% **ONLINE** :
+- OCR via **EasyOCR** (t√©l√©chargement des mod√®les √† la demande)
+- R√©solution des cartes via **Scryfall API** (en ligne)
+- Exports conformes : **MTGA / Moxfield / Archidekt / TappedOut**
 
-**Nouveau (v2.2.x)** : mode d√©mo air-gapped, base Scryfall offline, healthchecks OCR/Scryfall/pipeline‚Ä¶
+> üîÅ Changement majeur : **suppression compl√®te** de tout mode offline/air-gap.
+> Tesseract reste **interdit** (non install√©, non utilis√©).
 
 ## D√©marrage rapide
 
 ```bash
-# Stack de base
+# D√©marrer la stack (ONLINE)
 docker compose --profile core up -d redis postgres backend webapp
 
-# V√©rifier (API & Front)
+# V√©rifier
 curl -fsS http://localhost:8080/health | python3 -m json.tool
 curl -sI http://localhost:3000 | head -1
 ```
 
+### Test E2E (ONLINE)
+```bash
+# Test Playwright 100% ONLINE (upload r√©el ‚Üí OCR ‚Üí r√©sultat)
+make test-online
+# √©quivalent
+node tests/webapp.online.js
+```
+
 ## Architecture (vue rapide)
 
-Frontend (Next.js) ‚Üê‚Üí Backend (FastAPI) ‚Üê‚Üí OCR (EasyOCR) + Scryfall
+Frontend (Next.js) ‚Üê‚Üí Backend (FastAPI) ‚Üê‚Üí EasyOCR (mod√®les en ligne) ‚Üê‚Üí Scryfall API
+
+Pour le sch√©ma d√©taill√©, voir `ARCHITECTURE.md`.
 
 ## Contraintes
 
 - Interdiction de **Tesseract** (non install√©, non utilis√©)
 - Conformit√© stricte des exports (goldens)
 
-## Modes de fonctionnement
-- Air-gapped/offline (d√©mo)
-- Online (prod)
+## Modes de fonctionnement
+**Online uniquement.**
+Tous les artefacts offline (air-gap, DB Scryfall locale, pr√©-int√©gration des mod√®les) ont √©t√© retir√©s.
 
 ## Tests
 
-Consultez `TESTING.md` et les scripts Playwright pour les sc√©narios E2E.
+Consultez `TESTING.md` pour le sc√©nario E2E ONLINE et les images de test.
 
 ## Dossiers utiles
 
 - `validation_set/images/` ‚Äî images de test
 - `tests/` ‚Äî Playwright E2E
+
+## D√©mo √† distance (conseil)
+- Mettre front & API sous un m√™me domaine via reverse-proxy (ex. `/api` ‚Üí backend, `/` ‚Üí front).
+- Si domaines distincts, renseigner `CORS_ORIGINS`.
+
+## S√©curit√© (r√©sum√©)
+- Limiter la taille d'upload (10‚Äì12 MB) & les extensions (.png,.jpg,.jpeg,.webp)
+- Rate-limit c√¥t√© proxy (ex. 60 req/min/IP)
+- Logs structur√©s (jobId, latence OCR, erreurs typ√©es)
 
-## Notes
-- Voir README v2.2.x pour le mode air-gapped.
+## Notes de version
+- Voir `CHANGELOG.md` ‚Äî entr√©e v2.3.0 (ONLINE-only)
+
+---
+
+### Nettoyage par rapport aux versions ant√©rieures
+- ‚ùå **Supprim√©** : air-gap/offline, no_net_guard, healthchecks OCR/Scryfall/pipeline synth√©tiques, DB Scryfall locale, mod√®les EasyOCR pr√©-int√©gr√©s, scripts pipeline_100.sh / gate_pipeline.sh
+- ‚úÖ **Ajout√©** : `make test-online`, doc & diagramme ONLINE-only
diff --git a/ARCHITECTURE.md b/ARCHITECTURE.md
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/ARCHITECTURE.md
@@ -0,0 +1,55 @@
+# ARCHITECTURE ‚Äî ONLINE-only (v2.3.0)
+
+```mermaid
+flowchart LR
+  U[User Browser] -->|HTTPS /| FE[Next.js WebApp]
+  FE -->|/api/*| BE[FastAPI Backend]
+  BE -->|HTTP| OCR[EasyOCR (models on-demand)]
+  BE -->|HTTPS| SF[Scryfall API]
+  BE -->|Redis| R[(Redis)]
+  BE -->|SQL| PG[(PostgreSQL)]
+```
+
+## R√¥les
+- **WebApp** : upload image, suivi job, rendu r√©sultats, export
+- **Backend** : pipeline OCR ‚Üí parse ‚Üí normalisation (Scryfall API) ‚Üí validation ‚Üí export
+- **EasyOCR** : t√©l√©chargement des mod√®les **√† la demande** (en/ fr)
+- **Scryfall API** : r√©solution exacte, s√©mantique cartes
+- **Redis** : cache, idempotency (hash image ‚Üí jobId)
+- **PostgreSQL** : persistance jobs/r√©sultats (si activ√©e)
+
+## Endpoints cl√©s
+- `POST /api/ocr/upload` ‚Üí `{ jobId }`
+- `GET /api/ocr/status/:jobId` ‚Üí `{ state, result? }`
+- `POST /api/export/:target` ‚Üí export textuel conforme
+- `GET /health` ‚Üí statut simple
+
+## S√©curit√© / Op√©rations
+- M√™me domaine via reverse-proxy recommand√© (√©vite CORS)
+- Limites: upload (taille, extensions), rate-limit proxy
+- Logs JSON: traceId/jobId, latence, erreurs typ√©es
diff --git a/TESTING.md b/TESTING.md
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/TESTING.md
@@ -0,0 +1,60 @@
+# TESTING ‚Äî E2E ONLINE (v2.3.0)
+
+## Lancer les services
+```bash
+docker compose --profile core up -d redis postgres backend webapp
+curl -fsS http://localhost:8080/health | python3 -m json.tool
+curl -sI http://localhost:3000 | head -1
+```
+
+## Test E2E (Playwright)
+```bash
+make test-online
+# ou
+node tests/webapp.online.js
+```
+
+### Ce que v√©rifie le test
+1. Ouverture UI
+2. Upload d'une image (depuis `validation_set/images/`)
+3. Clic sur le bouton d'analyse (FR/EN)
+4. `POST /api/ocr/upload` ‚Üí r√©cup√®re `jobId`
+5. Poll `GET /api/ocr/status/:jobId` jusqu'√† `done`
+6. Pr√©sence d'un r√©sultat/export dans l'UI
+
+### Images de test conseill√©es
+- `validation_set/images/MTGA deck list_1535x728.jpeg`
+- `validation_set/images/MTGA deck list special_1334x886.jpeg`
+- `validation_set/images/MTGO deck list usual_1763x791.jpeg`
+
+## D√©pannage rapide
+- **Pas de redirection /result/** : inspecter la r√©ponse d'upload (doit renvoyer `{ jobId }`)
+- **OCR tr√®s lent au 1er run** : t√©l√©chargement initial des mod√®les EasyOCR ; relancer une 2e fois
+- **R√©sultat vide** : essayer une image du set ci-dessus ; consulter les logs backend
diff --git a/CHANGELOG.md b/CHANGELOG.md
index 3333333..4444444 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,20 @@
 # Changelog
 
+## v2.3.0 ‚Äî ONLINE-only
+**Added**
+- Test E2E ONLINE : `make test-online` (ou `node tests/webapp.online.js`)
+- Docs unifi√©es ONLINE : README, ARCHITECTURE, TESTING
+
+**Changed**
+- EasyOCR : `download_enabled: true` (mod√®les t√©l√©charg√©s √† la demande)
+- R√©solution cartes : **Scryfall API** (online)
+
+**Removed**
+- Tous les √©l√©ments offline/air-gap :
+  - no_net_guard, healthchecks OCR/Scryfall/Pipeline synth√©tiques
+  - DB Scryfall locale
+  - mod√®les EasyOCR pr√©-int√©gr√©s
+  - scripts `pipeline_100.sh`, `gate_pipeline.sh`
+
 ## v2.2.x
 - ‚Ä¶
diff --git a/.github/workflows/e2e-online.yml b/.github/workflows/e2e-online.yml
new file mode 100644
index 0000000..5555555
--- /dev/null
+++ b/.github/workflows/e2e-online.yml
@@ -0,0 +1,53 @@
+name: e2e-online
+on:
+  push:
+    branches: [ main ]
+  pull_request:
+    branches: [ main ]
+
+jobs:
+  e2e:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+
+      - name: Setup Node
+        uses: actions/setup-node@v4
+        with:
+          node-version: '20'
+
+      - name: Install Playwright
+        run: |
+          npm ci || npm i
+          npx playwright install --with-deps
+
+      - name: Docker Compose Up
+        run: |
+          docker compose --profile core build backend webapp
+          docker compose --profile core up -d redis postgres backend webapp
+          sleep 10
+          curl -fsS http://localhost:8080/health
+
+      - name: Run E2E ONLINE
+        env:
+          FRONT_URL: http://localhost:3000
+        run: node tests/webapp.online.js