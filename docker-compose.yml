services:
  redis:
    profiles: ["core"]
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports: ["6379:6379"]
  
  postgres:
    profiles: ["core"]
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: screen2deck
    ports: ["5433:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  backend:
    profiles: ["core"]
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env.docker
    ports: ["8080:8080"]
    volumes:
      - ./backend/app:/app/app
      - ./backend/app/data:/app/app/data
    depends_on: [redis, postgres]
  
  webapp:
    profiles: ["core"]
    build: ./webapp
    environment:
      - NEXT_PUBLIC_API_BASE=http://backend:8080
    ports: ["3000:3000"]
    depends_on: [backend]
  
  discord-bot:
    profiles: ["discord"]
    build: ./discord
    env_file: ./discord/.env
    restart: unless-stopped
    depends_on: [backend]
    volumes:
      - ./discord/logs:/app/logs
    networks:
      - default

volumes:
  postgres_data:

networks:
  default:
    name: screen2deck
    driver: bridge